g = layers_of_interest,
type = "basic",
calculate_distance = TRUE,
percentage = 50,
where_distance = "all",
distance = "euclidean",
rescale_distance =  TRUE,
scale = TRUE,
center = TRUE),
mop_basic_res1 <- smop::mop(M_calibra = reference_layers,
G_transfer = layers_of_interest,
percent = 50,
standardize_vars = TRUE,
normalized = TRUE),
times = 50
)
s_time
343.05850/18.46704
reference_layersb <- raster::stack(reference_layers)
layers_of_interestb <- raster::stack(layers_of_interest)
s_time <- microbenchmark::microbenchmark(mop_basic_res <- mop::mop(m = reference_layers,
g = layers_of_interest,
type = "basic",
calculate_distance = TRUE,
percentage = 50,
where_distance = "all",
distance = "euclidean",
rescale_distance =  TRUE,
scale = TRUE,
center = TRUE),
mop_basic_res1 <- smop::mop(M_calibra = reference_layers,
G_transfer = layers_of_interest,
percent = 50,
standardize_vars = TRUE,
normalized = TRUE),
mop_ntbox <- ntbox::mop(M_stack = reference_layersb,
G_stack = layers_of_interestb,
percent = 50,
normalized = TRUE,
parallel = FALSE),
times = 50
)
s_time
m_path <- system.file("extdata/M_layers", package = "smop") |>
list.files(full.names=TRUE)
g_path <- system.file("extdata/G_layers", package = "smop") |>
list.files(full.names=TRUE)
M_stack <- terra::rast(m_path)
G_stack <- terra::rast(g_path)
G_stackb <- raster::stack(G_stack)
s_time2 <- microbenchmark::microbenchmark(mop_basic_res <- mop::mop(m = M_stack, g = G_stack,
type = "basic",
calculate_distance = TRUE,
percentage = 50,
where_distance = "all",
distance = "euclidean",
rescale_distance =  TRUE,
parallel = FALSE,
scale = TRUE,
center = TRUE),
mop_basic_res1 <- smop::mop(M_calibra = M_stack,
G_transfer = G_stack,
comp_each = NULL,
percent = 50,
standardize_vars = TRUE,
normalized = TRUE)
mop_ntbox <- ntbox::mop(M_stack = M_stackb,
s_time2 <- microbenchmark::microbenchmark(mop_basic_res <- mop::mop(m = M_stack, g = G_stack,
type = "basic",
calculate_distance = TRUE,
percentage = 50,
where_distance = "all",
distance = "euclidean",
rescale_distance =  TRUE,
parallel = FALSE,
scale = TRUE,
center = TRUE),
mop_basic_res1 <- smop::mop(M_calibra = M_stack,
G_transfer = G_stack,
comp_each = NULL,
percent = 50,
standardize_vars = TRUE,
normalized = TRUE),
mop_ntbox <- ntbox::mop(M_stack = M_stackb,
G_stack = G_stackb,
percent = 50,
normalized = TRUE,
parallel = FALSE),
times = 50
)
M_stack <- terra::rast(m_path)
G_stack <- terra::rast(g_path)
M_stackb <- raster::stack(M_stack)
G_stackb <- raster::stack(G_stack)
s_time2 <- microbenchmark::microbenchmark(mop_basic_res <- mop::mop(m = M_stack, g = G_stack,
type = "basic",
calculate_distance = TRUE,
percentage = 50,
where_distance = "all",
distance = "euclidean",
rescale_distance =  TRUE,
parallel = FALSE,
scale = TRUE,
center = TRUE),
mop_basic_res1 <- smop::mop(M_calibra = M_stack,
G_transfer = G_stack,
comp_each = NULL,
percent = 50,
standardize_vars = TRUE,
normalized = TRUE),
mop_ntbox <- ntbox::mop(M_stack = M_stackb,
G_stack = G_stackb,
percent = 50,
normalized = TRUE,
parallel = FALSE),
times = 50
)
s_time2
1381.0458/401.8829
1381.0458/829.2151
?mop
?smop::mop
pkgdown::build_site_github_pages()
pkgdown::build_site_github_pages()
?smop::extrapolation_zones
``` R
m_path <- system.file("extdata/M_layers", package = "smop") |>
list.files(full.names=TRUE)
g_path <- system.file("extdata/G_layers", package = "smop") |>
list.files(full.names=TRUE)
M_calibra <- terra::rast(m_path)
G_transfer <- terra::rast(g_path)
terra::plot(c(M_calibra,G_transfer), main = "Calibration and transfer zone")
par(mfrow=c(1,2))
terra::plot(c(M_calibra,), main = "Calibration area")
par(mfrow=c(1,2))
terra::plot(M_calibra, main = "Calibration area")
terra::plot(G_transfer, main = "Transfer area")
``` R
``` R
terra::plot(M_calibra)
terra::plot(M_calibra)
png("img/03_calibration_area.png")
terra::plot(M_calibra)
dev.off()
png("img/03_calibration_area.png",res=100)
terra::plot(M_calibra)
dev.off()
png("img/03_calibration_area.png",res=150)
terra::plot(M_calibra)
dev.off()
png("img/03_calibration_area.png",res=150,width=600,height=500)
terra::plot(M_calibra)
dev.off()
png("img/04_tranfer_area.png",res=150,width=600,height=500)
terra::plot(G_transfer)
dev.off()
extr_zones <- smop::extrapolation_zones(M_calibra = M_calibra,
G_transfer = G_transfer,
as_vec =FALSE)
terra::plot(extr_zones)
extr_zones <- smop::extrapolation_zones(M_calibra = M_calibra,
G_transfer = G_transfer,
as_vec =FALSE)
terra::plot(extr_zones)
png("img/strict_extrapol.png",res=150,width=500,height=500)
terra::plot(extr_zones)
dev.off()
png("img/05_strict_extrapol.png",res=150,width=500,height=500)
terra::plot(extr_zones)
dev.off()
?smop::mop
mop_test <- smop::mop(M_calibra = M_calibra, G_transfer =  G_transfer,
percent = 20,comp_each = NULL,
normalized = TRUE, standardize_vars=TRUE)
terra::plot(mop_test)
png("img/06_mop_analysis.png",res=150,width=500,height=500)
terra::plot(mop_test)
dev.off()
pkgdown::build_site_github_pages()
pkgdown::build_site_github_pages()
pkgdown::build_site_github_pages()
pkgdown::build_site_github_pages()
pkgdown::build_site_github_pages()
pkgdown::build_site_github_pages()
pkgdown::build_site_github_pages()
pkgdown::build_site_github_pages()
pkgdown::build_site_github_pages()
smop::mop
?smop::mop
pkgdown::build_site_github_pages()
m_path <- system.file("extdata/M_layers", package = "smop") |>
list.files(full.names=TRUE)
g_path <- system.file("extdata/G_layers", package = "smop") |>
list.files(full.names=TRUE)
M_calibra <- terra::rast(m_path)
G_transfer <- terra::rast(g_path)
percent = 20
comp_each = 500
normalized = TRUE
standardize_vars=TRUE
if(methods::is(M_calibra,"SpatRaster")){
m1 <- terra::values(M_calibra)
}
if(is.data.frame(M_calibra)){
m1 <- as.matrix(M_calibra)
}
if(!is.matrix(m1)){
stop("M1 should be of class SpatRaster or matrix or data.frame")
}
if(methods::is(G_transfer,"SpatRaster")){
g1 <- terra::values(G_transfer)
}
if(is.data.frame(G_transfer)){
g1 <- as.matrix(G_transfer)
}
if(!is.matrix(g1)){
stop("G1 should be of class SpatRaster or matrix or data.frame")
}
# Check extrapolation zones
ids_extrapol <- smop::extrapolation_zones(M_calibra = m1,G_transfer = g1,
as_vec = FALSE)
# Discard extrapolation zones in mop computation
if(length(ids_extrapol)> 0L){
g1[ids_extrapol,] <- NA
}
if(standardize_vars){
m1 <- smop::std_vars(pred = m1, as_matrix = TRUE)
g1 <- smop::std_vars(pred = g1, as_matrix = TRUE)
}
m1 <- m1 |> stats::na.omit()
g1 <- g1 |> stats::na.omit()
ids_na <- stats::na.action(g1)
n_parts <- ceiling(nrow(g1)/comp_each)
partitions <- cut(seq_len(nrow(g1)),n_parts)
g1L <- split(as.data.frame(g1),partitions)
g1L <- split.data.frame(g1,partitions)
g1L
options(future.globals.maxSize = 388500 * 1024^2)
rmop <- seq_along(g1L) |> furrr::future_map(function(x){
g1_split <- as.matrix(g1L[[x]])
r1 <- calcMOP(m1,g1_split,prob =percent/100)
return(r1)
},.progress = TRUE,
.options = furrr::furrr_options(seed = NULL,globals = c("g1L","m1")))
split.data.frame
library(mop)
library(microbenchmark)
# data
## current conditions
reference_layers <- terra::rast(system.file("extdata", "reference_layers.tif",
package = "mop"))
## future conditions
layers_of_interest <- terra::rast(system.file("extdata",
"layers_of_interest.tif",
package = "mop"))
reference_layersb <- raster::stack(reference_layers)
layers_of_interestb <- raster::stack(layers_of_interest)
s_time <- microbenchmark::microbenchmark(mop_basic_res <- mop::mop(m = reference_layers,
g = layers_of_interest,
type = "basic",
calculate_distance = TRUE,
percentage = 50,
where_distance = "all",
distance = "euclidean",
rescale_distance =  TRUE,
scale = TRUE,
center = TRUE),
mop_basic_res1 <- smop::mop(M_calibra = reference_layers,
G_transfer = layers_of_interest,
percent = 50,
standardize_vars = TRUE,
normalized = TRUE),
mop_ntbox <- ntbox::mop(M_stack = reference_layersb,
G_stack = layers_of_interestb,
percent = 50,
normalized = TRUE,
parallel = FALSE),
times = 50
)
s_time
344.53702/17.96
terra::plot(mop_basic_res1)
terra::plot(mop_basic_res$mop_distances)
m_path <- system.file("extdata/M_layers", package = "smop") |>
list.files(full.names=TRUE)
g_path <- system.file("extdata/G_layers", package = "smop") |>
list.files(full.names=TRUE)
M_stack <- terra::rast(m_path)
G_stack <- terra::rast(g_path)
M_stackb <- raster::stack(M_stack)
G_stackb <- raster::stack(G_stack)
s_time2 <- microbenchmark::microbenchmark(mop_basic_res <- mop::mop(m = M_stack, g = G_stack,
type = "basic",
calculate_distance = TRUE,
percentage = 50,
where_distance = "all",
distance = "euclidean",
rescale_distance =  TRUE,
parallel = FALSE,
scale = TRUE,
center = TRUE),
mop_basic_res1 <- smop::mop(M_calibra = M_stack,
G_transfer = G_stack,
comp_each = NULL,
percent = 50,
standardize_vars = TRUE,
normalized = TRUE),
mop_ntbox <- ntbox::mop(M_stack = M_stackb,
G_stack = G_stackb,
percent = 50,
normalized = TRUE,
parallel = FALSE),
times = 50
)
s_time2 <- microbenchmark::microbenchmark(mop_basic_res <- mop::mop(m = M_stack, g = G_stack,
type = "basic",
calculate_distance = TRUE,
percentage = 50,
where_distance = "all",
distance = "euclidean",
rescale_distance =  TRUE,
parallel = FALSE,
scale = TRUE,
center = TRUE),
mop_basic_res1 <- smop::mop(M_calibra = M_stack,
G_transfer = G_stack,
comp_each = NULL,
percent = 50,
standardize_vars = TRUE,
normalized = TRUE),
mop_ntbox <- ntbox::mop(M_stack = M_stackb,
G_stack = G_stackb,
percent = 50,
normalized = TRUE,
parallel = FALSE),
times = 20
)
s_time2
1422.4178/410
pkgdown::build_site()
pkgdown::build_articles()
pkgdown::build_articles_index()
pkgdown::build_favicons()
pkgdown::build_home_index()
pkgdown::build_search()
pkgdown::deploy_site_github()
pkgdown::deploy_to_branch()
?usethis::use_badge()
usethis::use_github_actions_badge(name = "R-CMD-check.yaml", repo_spec = NULL)
use_github_action("pkgdown")
usethis::use_github_action("pkgdown")
usethis::use_github_actions()
usethis::use_github_actions()
usethis::use_badge()
?usethis::use_badge()
use_github_action_check_standard()
usethis::use_github_action_check_standard()
usethis::use_github_action_check_release()
?usethis::use_badge()
usethis::use_coverage()
library(smop)
library(smop)
library(smop)
pkgdown::build_site()
usethis::use_github_actions()
usethis::use_github_action_check_standard()
usethis::use_badge()
usethis::use_coverage()
pkgdown::build_site()
usethis::use_coverage()
?usethis::use_coverage()
use_coverage(type = c("codecov", "coveralls"), repo_spec = "luismurao/smop")
usethis::use_coverage(type = c("codecov", "coveralls"), repo_spec = "luismurao/smop")
pkgdown::build_site()
remotes::install_github("r-lib/revdepcheck")
usethis::use_git_ignore("revdep/")
usethis::use_build_ignore("revdep/")
devtools::revdep()
library(revdepcheck)
# In another session
id <- rstudioapi::terminalExecute("Rscript -e 'revdepcheck::revdep_check(num_workers = 4)'")
rstudioapi::terminalKill(id)
# See outputs
revdep_details(revdep = "pkg")
library(revdepcheck)
# Check reverse dependencies
# remotes::install_github("r-lib/revdepcheck")
install.packages('revdepcheck', repos = 'https://r-lib.r-universe.dev')
remotes::install_github("r-lib/revdepcheck")
# Upgrade version number
usethis::use_version(which = c("patch", "minor", "major", "dev")[1])
# Upgrade version number
usethis::use_version(which = c("patch", "minor", "major", "dev")[1])
# Verify you're ready for release, and release
devtools::release()
library(smop)
library(mop)
library(microbenchmark)
# data
## current conditions
reference_layers <- terra::rast(system.file("extdata", "reference_layers.tif",
package = "mop"))
## future conditions
layers_of_interest <- terra::rast(system.file("extdata",
"layers_of_interest.tif",
package = "mop"))
reference_layersb <- raster::stack(reference_layers)
layers_of_interestb <- raster::stack(layers_of_interest)
s_time <- microbenchmark::microbenchmark(mop_basic_res <- mop::mop(m = reference_layers,
g = layers_of_interest,
type = "basic",
calculate_distance = TRUE,
percentage = 50,
where_distance = "all",
distance = "euclidean",
rescale_distance =  TRUE,
scale = TRUE,
center = TRUE),
mop_basic_res1 <- smop::mop(M_calibra = reference_layers,
G_transfer = layers_of_interest,
percent = 50,
standardize_vars = TRUE,
normalized = TRUE),
mop_ntbox <- ntbox::mop(M_stack = reference_layersb,
G_stack = layers_of_interestb,
percent = 50,
normalized = TRUE,
parallel = FALSE),
times = 50
)
s_time
372.30944/19.67157
terra::plot(mop_basic_res1)
terra::plot(mop_basic_res$mop_distances)
m_path <- system.file("extdata/M_layers", package = "smop") |>
list.files(full.names=TRUE)
g_path <- system.file("extdata/G_layers", package = "smop") |>
list.files(full.names=TRUE)
M_stack <- terra::rast(m_path)
G_stack <- terra::rast(g_path)
M_stackb <- raster::stack(M_stack)
G_stackb <- raster::stack(G_stack)
s_time2 <- microbenchmark::microbenchmark(mop_basic_res <- mop::mop(m = M_stack, g = G_stack,
type = "basic",
calculate_distance = TRUE,
percentage = 50,
where_distance = "all",
distance = "euclidean",
rescale_distance =  TRUE,
parallel = FALSE,
scale = TRUE,
center = TRUE),
mop_basic_res1 <- smop::mop(M_calibra = M_stack,
G_transfer = G_stack,
comp_each = NULL,
percent = 50,
standardize_vars = TRUE,
normalized = TRUE),
mop_ntbox <- ntbox::mop(M_stack = M_stackb,
G_stack = G_stackb,
percent = 50,
normalized = TRUE,
parallel = FALSE),
times = 20
)
s_time2
1382.5679/376.1972
v1 <- rnorm(1e10)
v1 <- rnorm(1e5)
v1
v1 <- rnorm(1e9)
v1 <- rnorm(1e7)
library(microbenchmark)
set.seed(123)
v1 <- rnorm(1e7)
v1 <- rnorm(1e7,mean=10,sd=2)
rcpp_mean(v1)
Rcpp::sourceCpp("~/Dropbox/mop_new/test_means.cpp")
Rcpp::sourceCpp("~/Dropbox/mop_new/test_means.cpp")
install.packages("mvtnorm")
install.packages("mvtnorm")
install.packages("mvtnorm",type="source")
Rcpp::sourceCpp("~/Dropbox/mop_new/test_means.cpp")
Rcpp::sourceCpp("~/Dropbox/mop_new/test_means.cpp")
v1 <- rnorm(1e7,mean=10,sd=2)
rcpp_mean(v1)
double rcpp_mean(NumericVector x) {
Rcpp::sourceCpp("~/Dropbox/mop_new/test_means.cpp")
Rcpp::sourceCpp("~/Dropbox/mop_new/test_means.cpp")
Rcpp::sourceCpp("~/Dropbox/mop_new/test_means.cpp")
install.packages("Rcpp")
install.packages("RcppArmadillo")
devtools::install_github("luismurao/bamm")
devtools::install_github("luismurao/ntbox")
Rcpp::sourceCpp("~/Dropbox/mop_new/test_means.cpp")
Rcpp::sourceCpp("~/Dropbox/mop_new/test_means.cpp")
Rcpp::sourceCpp("~/Dropbox/mop_new/test_means.cpp")
arma_mean(v1)
rcpp_mean(v1)
arma_mean(v1)
v1 <- rnorm(1e8,mean=10,sd=2)
rcpp_mean(v1)
arma_mean(v1)
install.packages("microbenchmark")
tiempos <- microbenchmark::microbenchmark(a <- rcpp_mean(v1),
b <- arma_mean(v1))
tiempos
153.80725/46.08959
a <- rcpp_mean(v1)
b <- arma_mean(v1)
Rcpp::sourceCpp("~/Dropbox/mop_new/test_means.cpp")
